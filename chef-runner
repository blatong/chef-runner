#!/bin/sh
#/ Usage: chef-runner [options] [--] [<recipe>...]
#/
#/     -h, --help             show help text
#/     -H, --host <name>      hostname for direct SSH access
#/     -F, --format <format>  Chef output format to use
#
# Written by Mathias Lafeldt <mathias.lafeldt@gmail.com>

set -e

abort(){
    echo >&2 "$*"
    exit 1
}

parse_args() {
    while test "$#" -ne 0; do
        case "$1" in
            -h|--help)
                grep '^#/' <"$0" | cut -c4-; exit 0 ;;
            -H|--host)
                HOST=$2; shift 2 ;;
            -F|--format)
                FORMAT=$2; shift 2 ;;
            --)
                shift; break ;;
            -|[!-]*)
                break ;;
            -*)
                abort "error: invalid option '$1'" ;;
        esac
    done

    if test $# -gt 0; then
        while test $# -gt 0; do
            case "$1" in
            *::*) recipe="$1" ;;
            *.rb) recipe="$COOKBOOK_NAME::$(basename $1 .rb)" ;;
            *)    recipe="$COOKBOOK_NAME::$1" ;;
            esac
            shift

            if test -z "$RUNLIST"; then
                RUNLIST="$recipe"
            else
                RUNLIST="$RUNLIST,$recipe"
            fi
        done
    else
        RUNLIST="$COOKBOOK_NAME::default"
    fi
}

cookbook_name() {
    file="metadata.rb"
    test -f "$file" || abort "error: $file not found"
    head -n1 "$file" | sed "s/^name/echo/" | sh
}

install_cookbooks() {
    if ! test -d "$COOKBOOK_PATH/$COOKBOOK_NAME"; then
        berks install --path "$COOKBOOK_PATH"
    else
        rsync --archive --delete --exclude="$COOKBOOK_PATH" * "$COOKBOOK_PATH/$COOKBOOK_NAME"
    fi
}

run_ssh() {
    if test -n "$HOST"; then
        ssh "$HOST" "$@"
    else
        vagrant ssh default -c "$*"
    fi
}

run_chef() {
    CONFIG="/tmp/vagrant-chef-1/solo.rb"
    JSON="/tmp/vagrant-chef-1/dna.json"

    run_ssh sudo chef-solo --config="$CONFIG" \
                           --json-attributes="$JSON" \
                           --override-runlist="$RUNLIST" \
                           --force-formatter \
                           --format="$FORMAT"
}

HOST=
RUNLIST=
FORMAT="minimal"

: ${COOKBOOK_NAME:=$(cookbook_name)}
: ${COOKBOOK_PATH:="vendor/cookbooks"}

parse_args "$@"
install_cookbooks
run_chef
